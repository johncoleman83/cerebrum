# Golang CircleCI 2.0 configuration file
#
# Reference
#   * https://circleci.com/docs/2.0/language-go/
#   * https://github.com/CircleCI-Public/circleci-demo-go/blob/master/Makefile
#
version: 2
jobs:
  build_and_test:
    docker:
      # specify the version
      - image: circleci/golang:1.13

      - image: mysql:latest
        command: mysqld --sql_mode=""
        restart: always
        ports:
          - 3306:3306
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: cerebrum_mysql_test_db
          MYSQL_USER: mysql_test_user
          MYSQL_PASSWORD: mysql_test_password
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/johncoleman83/cerebrum
    environment: # environment variables for the build itself
      TEST_RESULTS: ./test # path to where test results will be saved
    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: install dependencies
          command: go get -t -v ./...

      - run:
          name: test go packages
          command: ./scripts/test.bash

      - run:
          name: install golint
          command: go get -u golang.org/x/lint/golint

      - run:
          name: run linter
          command: make lint

      # token required for private projects 'bash <(curl -s https://codecov.io/bash) -t token'
      - run:
          name: code coverage check with codecov.io
          command: bash <(curl -s https://codecov.io/bash) -y ./build/ci/codecov/codecov.yml || echo "Codecov did not collect coverage reports"

workflows:
  version: 2
  build-workflow:
    jobs:
      - build_and_test
